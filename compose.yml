version: '3.9'

services:
  mysql_db:
    image: mysql:8.3
    container_name: mysql_db
    # tmpfs:
    #   - /var/lib/mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: pychecker
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "mysql -h 127.0.0.1 -u ${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'SELECT 1;'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 700s
      start_interval: 10s
    volumes:
      - mysql_data:/var/lib/mysql

  # db_init:
  #   image: mysql:8.3
  #   container_name: db_init
  #   environment:
  #     MYSQL_USER: ${MYSQL_USER}
  #   depends_on:
  #     mysql_db:
  #       condition: service_healthy
  #   command:
  #     sh -c "mysql -h mysql_db -u root -p${MYSQL_ROOT_PASSWORD} < /init/init.sql"
  #   volumes:
  #     - ./init.sql:/init/init.sql
  #   networks:
  #     - app-network

  # prisma:
  #   image: node:18-alpine
  #   container_name: prisma
  #   depends_on:
  #     mysql_db:
  #       condition: service_healthy
  #   working_dir: /app
  #   volumes:
  #     - .:/app
  #   environment:
  #     DATABASE_URL: mysql://root:password@mysql_db:3306/pychecker
  #   command: >
  #     sh -c "npm install && npx prisma generate && npx prisma migrate deploy"
  #   # networks:
  #   #   - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./entrypoint.sh"]
    container_name: next_web
    ports:
      - '3000:3000'
    depends_on:
      mysql_db:
        condition: service_healthy
      # db_init:
      #   condition: service_completed_successfully
    env_file:
      - .env
    networks:
      - app-network

networks:
  app-network:

volumes:
  mysql_data:
    driver: local